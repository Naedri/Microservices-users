generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

//https://www.sqlstyle.guide
//https://www.prisma.io/docs/concepts/components/prisma-client/working-with-prismaclient/use-custom-model-and-field-names#using-map-and-map-to-rename-fields-and-models-in-the-prisma-client-api
// model name -> PascalCas
// field name -> camelCase

model Application {
  id            Int            @id @default(autoincrement())
  name          String         @unique @db.VarChar
  url           String?        @db.VarChar
  subscriptions Subscription[]

  @@map("applications")
}

model Subscription {
  id           Int         @id @default(autoincrement())
  userId       Int         @map("user_id")
  appId        Int         @map("app_id")
  applications Application @relation(fields: [appId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  users        User        @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@map("subscriptions")
}

// one role by user
// Prisma schema does not currently support default values for arrays
model User {
  id            Int            @id @default(autoincrement())
  email         String         @unique @db.VarChar
  password      String?        @db.VarChar
  firstName     String?        @map("first_name") @db.VarChar
  lastName      String?        @map("last_name") @db.VarChar
  role          Role           @default(CLIENT)
  createdAt     DateTime       @default(now()) @map("created_at")
  updatedAt     DateTime       @default(now()) @updatedAt @map("updated_at")
  subscriptions Subscription[]

  @@map("users")
}

enum Role {
  CLIENT
  ADMIN
}
